
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author MARCO ANTONIO AND ALESSANDRO PEIXOTO 
 */
public class FrameVot extends javax.swing.JFrame {

    /**
     * Creates new form FrameVot
     */
    public FrameVot() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCandidatoA = new javax.swing.JTextField();
        txtCandidatoB = new javax.swing.JTextField();
        txtCandidatoC = new javax.swing.JTextField();
        txtVotosNulos = new javax.swing.JTextField();
        txtVotosBrancos = new javax.swing.JTextField();
        btnApurar = new javax.swing.JButton();
        lblResposta = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));
        setForeground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("CANDIDATO A");

        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("CANDIDATO B");

        jLabel3.setForeground(new java.awt.Color(255, 0, 204));
        jLabel3.setText("CANDIDATO C");

        jLabel4.setText("VOTOS NULOS");

        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("VOTOS EM BRANCO");

        txtCandidatoA.setBackground(new java.awt.Color(204, 204, 204));
        txtCandidatoA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCandidatoAActionPerformed(evt);
            }
        });

        txtCandidatoB.setBackground(new java.awt.Color(204, 204, 204));

        txtCandidatoC.setBackground(new java.awt.Color(204, 204, 204));

        txtVotosNulos.setBackground(new java.awt.Color(204, 204, 204));

        txtVotosBrancos.setBackground(new java.awt.Color(204, 204, 204));

        btnApurar.setBackground(new java.awt.Color(153, 153, 255));
        btnApurar.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        btnApurar.setForeground(new java.awt.Color(255, 0, 0));
        btnApurar.setText("APURAR ");
        btnApurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApurarActionPerformed(evt);
            }
        });

        lblResposta.setBackground(new java.awt.Color(255, 204, 204));
        lblResposta.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblResposta.setText("AGUARDANDO APURAÇÃO..");

        jLabel7.setBackground(new java.awt.Color(102, 102, 102));
        jLabel7.setFont(new java.awt.Font("Serif", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("ELEIÇÕES 2023");

        btnLimpar.setBackground(new java.awt.Color(153, 153, 255));
        btnLimpar.setFont(new java.awt.Font("Serif", 1, 12)); // NOI18N
        btnLimpar.setForeground(new java.awt.Color(255, 0, 0));
        btnLimpar.setText("LIMPAR");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCandidatoA, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                            .addComponent(txtVotosBrancos, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCandidatoB, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCandidatoC, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtVotosNulos, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnApurar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(lblResposta, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCandidatoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCandidatoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtCandidatoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtVotosNulos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtVotosBrancos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnApurar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblResposta, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCandidatoAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCandidatoAActionPerformed

    }//GEN-LAST:event_txtCandidatoAActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
           //BOTÃO LIMPAR !!
           txtCandidatoA.setText("");
           txtCandidatoB.setText("");
           txtCandidatoC.setText("");
           txtVotosNulos.setText("");
           txtVotosBrancos.setText("");
           lblResposta.setText("AGUARDANDO APURAÇÃO...");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnApurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApurarActionPerformed
      
        //INVOCAÇÃO DOS MÉTODOS VERIFICADORES DE CAMPO AO CLICAR NO BOTÃO APURAR !!
        
        if (verificarVazio()== false){
        return;
        
        }
        
        else if (verificarNumeros()== false){
        return;
        
        }
        
        int candA,candB,candC,votN,votB;
       
         candA = Integer.parseInt(txtCandidatoA.getText());
         candB = Integer.parseInt(txtCandidatoB.getText());
         candC = Integer.parseInt(txtCandidatoC.getText());
         votN = Integer.parseInt(txtVotosNulos.getText());
         votB = Integer.parseInt(txtVotosBrancos.getText());


        
        
        Eleicao eleicao = new Eleicao(candA,candB,candC,votN,votB);
        
        
    
      
        lblResposta.setText("<html>"+
                            "# RESULTADO # "+
                            "<br><br>" + eleicao.apurar() +
                            "<br><br># PERCENTUAL DE VOTOS #"+        
                            "<br><br>Total de Votos: "+ eleicao.getTotalVotos() + ("  (") + String.format( "%.0f" ,eleicao.getPercTV()) + ("%)") + 
                            "<br><br>Votos Válidos: "+ eleicao.getVotosValidos() + ("  (") + String.format( "%.2f" ,eleicao.getPercVV()) + ("%)")+ 
                            "<br><br>Votos em Branco: "+ eleicao.getVotosBrancos() + ("  (") + String.format( "%.2f" ,eleicao.getPercVB()) + ("%)")+          
                            "<br><br>Votos Nulos: "+ eleicao.getVotosNulos() + ("  (") + String.format( "%.2f" ,eleicao.getPercVN()) + ("%)") + 
                            "<br><br>Candidato A: "+ eleicao.getVotosCandidatoA() + ("  (") + String.format( "%.2f" ,eleicao.getPercVCA()) + ("%)")+ 
                            "<br><br>Candidato B: "+ eleicao.getVotosCandidatoB() + ("  (") + String.format( "%.2f" ,eleicao.getPercVCB()) + ("%)")+ 
                            "<br><br>Candidato C: "+ eleicao.getVotosCandidatoC() + ("  (") + String.format( "%.2f" ,eleicao.getPercVCC()) + ("%)")+  
                            "<br><br></html>");
    }//GEN-LAST:event_btnApurarActionPerformed
     
    //MÉTODO PARA VERIFICAR SE OS CAMPOS ESTÀO VAZIOS !!
    
    public boolean verificarVazio(){
    
   //VARIÁVEL PARA GUARDAR VALOR DOS TEXT FIELDS !!
    
   String votosCandidatoAStr,votosCandidatoBStr,votosCandidatoCStr,
          votosNulosStr,votosBrancosStr;
   
   //CAPTURA DOS VALORES
   
   votosCandidatoAStr = txtCandidatoA.getText();
   votosCandidatoBStr = txtCandidatoB.getText();
   votosCandidatoCStr = txtCandidatoC.getText();
   votosNulosStr = txtVotosNulos.getText(); 
   votosBrancosStr = txtVotosBrancos.getText();
   
   //VERIFICA SE OS CAMPOS ESTÃO VAZIOS !!
   
   if(votosCandidatoAStr.trim().length() == 0){
       JOptionPane.showMessageDialog(null, "Forneça a quantidade de VOTOS do CANDIDATO A !");
       txtCandidatoA.requestFocus();
       return false;
     }
   
   if(votosCandidatoBStr.trim().length() == 0){
       JOptionPane.showMessageDialog(null, "Forneça a quantidade de VOTOS do CANDIDATO B !");
       txtCandidatoB.requestFocus();
       return false;
     }
   
   if(votosCandidatoCStr.trim().length() == 0){
       JOptionPane.showMessageDialog(null, "Forneça a quantidade de VOTOS do CANDIDATO C !");
       txtCandidatoC.requestFocus();
       return false;
     }
   
   if(votosNulosStr.trim().length() == 0 ){
       JOptionPane.showMessageDialog(null, "Forneça a quantidade de VOTOS NULOS !");
       txtVotosNulos.requestFocus();
       return false;
     }
   
   if(votosBrancosStr.trim().length() == 0){
       JOptionPane.showMessageDialog(null, "Forneça a quantidade de VOTOS em BRANCO !");
       txtVotosBrancos.requestFocus();
       return false;
     }
   
    
   
       return true;
    }
    
   //MÉTODO PARA VERIFICAR SE OS DADOS INSERIDOS SÃO DO TIPO INTEIRO !!

    public boolean verificarNumeros(){
        
   //VARIÁVEL PARA GUARDAR VALOR DOS TEXT FIELDS !!
    
   String votosCandidatoAStr,votosCandidatoBStr,votosCandidatoCStr,
          votosNulosStr,votosBrancosStr;
   
   //CAPTURA DOS VALORES
   
   votosCandidatoAStr = txtCandidatoA.getText();
   votosCandidatoBStr = txtCandidatoB.getText();
   votosCandidatoCStr =  txtCandidatoC.getText();
   votosNulosStr = txtVotosNulos.getText(); 
   votosBrancosStr = txtVotosBrancos.getText();
        
   //VARIÁVEIS DO TIPO double PARA CONVERSÃO !!   
   double votosCandidatoA,votosCandidatoB,votosCandidatoC;
   double  votosNulos,votosBrancos;
        
        //CANDIDATO A !!
        try{         
          votosCandidatoA = Double.parseDouble(votosCandidatoAStr);  
        }catch(Exception ex){
        JOptionPane.showMessageDialog(null,"O valor inserido \" " + votosCandidatoAStr + "\" não é um número inteiro válido! " );
         txtCandidatoA.setText("");
         txtCandidatoA.requestFocus();
         
         return false;
        }       //CONDIÇÃO PARA VERIFICAR SE VALOR É NEGATIVO OU POSITIVO !!
                if(votosCandidatoA <0){
                JOptionPane.showMessageDialog(null,"Quantidade de votos do CANDIDATO A não pode ser menor que 0");
                txtCandidatoA.setText("");
                txtCandidatoA.requestFocus();
                return false;
                }
              
        
        //CANDIDATO B !!       
        try{           
         votosCandidatoB = Double.parseDouble(votosCandidatoBStr);  
        }catch(Exception ex){
         JOptionPane.showMessageDialog(null,"O valor inserido \" " + votosCandidatoBStr + "\" não é um número inteiro válido! " );
         txtCandidatoB.setText("");
         txtCandidatoB.requestFocus();
         return false;
        }       if(votosCandidatoB <0){
                JOptionPane.showMessageDialog(null,"Quantidade de votos do CANDIDATO B não pode ser menor que 0");
                txtCandidatoB.setText("");
                txtCandidatoB.requestFocus();
                return false;
                }
                
        //CANDIDATO C !!  
        try{
         votosCandidatoC = Double.parseDouble(votosCandidatoCStr);  
        }catch(Exception ex){
         JOptionPane.showMessageDialog(null,"O valor inserido \" " + votosCandidatoCStr + "\" não é um número inteiro válido! " );
         txtCandidatoC.setText("");
         txtCandidatoC.requestFocus();
         return false;
        }       if(votosCandidatoC <0){
                JOptionPane.showMessageDialog(null,"Quantidade de votos do CANDIDATO C não pode ser menor que 0");
                txtCandidatoC.setText("");
                txtCandidatoC.requestFocus();
                return false;
                }
        //VOTOS NULOS !! 
        try{
         votosNulos = Double.parseDouble(votosNulosStr);  
        }catch(Exception ex){
          JOptionPane.showMessageDialog(null,"O valor inserido \" " + votosNulosStr + "\" não é um número inteiro válido! " );
         txtVotosNulos.setText("");
         txtVotosNulos.requestFocus();  
         return false;
        }       if(votosNulos <0){
                JOptionPane.showMessageDialog(null,"Quantidade de votos NULOS não pode ser menor que 0");
                txtVotosNulos.setText("");
                txtVotosNulos.requestFocus();
                return false;
               
                }
          
        //VOTOS EM BRANCO !!
        try{
         votosBrancos = Double.parseDouble(votosBrancosStr);  
        }catch(Exception ex){
          JOptionPane.showMessageDialog(null,"O valor inserido \" " + votosBrancosStr + "\" não é um número inteiro válido! " );
         txtVotosBrancos.setText("");
         txtVotosBrancos.requestFocus();
         return false;
        }       if(votosBrancos <0){
                JOptionPane.showMessageDialog(null,"Quantidade de votos em BRANCO não pode ser menor que 0");
                txtVotosBrancos.setText("");
                txtVotosBrancos.requestFocus();
                return false;
               
                } 
        
        return true;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameVot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameVot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameVot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameVot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameVot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApurar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel lblResposta;
    private javax.swing.JTextField txtCandidatoA;
    private javax.swing.JTextField txtCandidatoB;
    private javax.swing.JTextField txtCandidatoC;
    private javax.swing.JTextField txtVotosBrancos;
    private javax.swing.JTextField txtVotosNulos;
    // End of variables declaration//GEN-END:variables
}
